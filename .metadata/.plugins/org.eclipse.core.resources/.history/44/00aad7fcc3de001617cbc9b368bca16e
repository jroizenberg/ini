package serviceInterface;

import java.rmi.ServerException;
import java.util.Date;
import java.util.List;
import java.util.Map;

import model.FMSimpleCalendarEvent;

import com.asofarma.fm.calendar.model.AbsenceCauseModel;
import com.asofarma.fm.calendar.model.AbsenceModel;
import com.asofarma.fm.calendar.model.ActionAppointmentModel;
import com.asofarma.fm.calendar.model.AppointmentModel;
import com.asofarma.fm.calendar.model.AppointmentType;
import com.asofarma.fm.calendar.model.ComplementaryActionModel;
import com.asofarma.fm.calendar.model.ComplementaryActionTypeModel;
import com.asofarma.fm.calendar.model.ContactModel;
import com.asofarma.fm.calendar.model.CycleModel;
import com.asofarma.fm.calendar.model.EventModel;
import com.asofarma.fm.calendar.model.HolidayModel;
import com.asofarma.fm.calendar.model.InstitutionalCalendar;
import com.asofarma.fm.calendar.model.SaveModifyResponse;
import com.asofarma.fm.calendar.model.UserCalendarResponse;
import com.asofarma.fm.wf.model.AlarmFrequency;

public interface CalendarService {

	public List<EventModel> retrieveEvents(String userName,Date startDate, Date endDate) throws Exception;
	
	public List<HolidayModel> retrieveHolidays(String userName, Date startDate, Date endDate) throws Exception;
	
	public List<AppointmentModel> retrieveAppointments(String userName,Date startDate, Date endDate) throws Exception;
	
	public List<AppointmentModel> retrieveAppointments(List<String> users,Date startDate,Date endDate) throws Exception;
	
	public List<InstitutionalCalendar> retrieveCalendarConfiguration(String userName);

	public List<AbsenceCauseModel> retrieveAbsenceCauses(String name) throws Exception;
	
	public List<ComplementaryActionTypeModel> retrieveComplementaryActionTypes(String userName) throws Exception;
	
	public SaveModifyResponse saveAbsence(String userName, FMSimpleCalendarEvent absenceEvent) throws Exception;
	
	public List<CycleModel> retrieveCycles(String userName) throws Exception;
	
	public SaveModifyResponse saveActionAppointment(String userName, FMSimpleCalendarEvent actionAppointmentEvent) throws ServerException;
	
	public List<ContactModel> retrieveContactbyUser(String userName,String locale);

	public SaveModifyResponse saveComplementaryAction(String userName, FMSimpleCalendarEvent dto) throws ServerException;
	
	public List<ContactModel> retrieveContactbyCicle(String userName, Long idCycle,String locale) throws ServerException;
	
	public void deleteAppointment(String userName, Long idAppointment, AppointmentType type) throws ServerException;
	
	public SaveModifyResponse modifyAbsence(String userName, FMSimpleCalendarEvent absenceEvent) throws ServerException;
	
	public SaveModifyResponse modifyActionAppointment(String userName, FMSimpleCalendarEvent actionAppointmentEvent) throws ServerException;

	public SaveModifyResponse modifyComplementaryAction(String userName, FMSimpleCalendarEvent complementaryActionModel) throws ServerException;
	
	public List<ContactModel> retrieveContacts(String userName,String locale) throws ServerException;
	
	public AbsenceModel getAbscenceById(String userName,Long id);
	
	public ActionAppointmentModel getActionAppointmentById(String userName,Long id);
	
	public ComplementaryActionModel getComplementaryActionById(String userName,Long id);
	
	public String getContactNameById(Long id) ;
	
	public String getContactAddress(Long contactId);

//	public List<IGeneralEvent> retrieveAllEvent(String loggedUser,String userName,Date startDate,Date endDate);
//	
//	public List<IGeneralEvent> retrieveAllEvent(String loggedUser,List<String> userName,Date startDate,Date endDate);
	
//	public SaveModifyResponse modifyGenericAppointment(String userName,IGeneralEvent cita);
	
	public UserCalendarResponse getUserInfo(String userName) throws ServerException;
	
	public Map<AlarmFrequency, String> retrieveAlarmFrequencies() throws ServerException;

}
